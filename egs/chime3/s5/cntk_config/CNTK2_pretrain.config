NdlDir=$ExpDir$
MelDir=$ExpDir$
#stderr=$ExpDir$/cntk_log/$logfile$
command=P1:A2:P2:A3:P3:A4:P4:A5:P5:A6:Train

precision=float

ndlMacros=$NdlDir$/default_macros.ndl
deviceId=$DeviceNumber$

#uniformInit=false
#initValueScale=0.5

##########################################
#  Blocks common to all pre-training commands
##########################################
traceLevel=1
SGD=[
	# epochSize=0 means epochSize is the size of the training set
        epochSize=0 
        #epochSize=100000
        minibatchSize=200
        #learningRatesPerMB=50:10:1
        learningRatesPerSample=0.0005
        momentumPerMB=0.5*2:0.9
        dropoutRate=0.5*3:0.4*3:0.3*3:0.2*3:0.1*3:0.0
        maxEpochs=20

        #settings for Auto Adjust Learning Rate
        AutoAdjust=[
            reduceLearnRateIfImproveLessThan=0
            loadBestModel=true
            increaseLearnRateIfImproveMoreThan=1000000000
            learnRateDecreaseFactor=0.5
            autoAdjustLR=AdjustAfterEpoch
            learnRateAdjustInterval=1
        ]
        gradientClippingWithTruncation=true
        clippingThresholdPerSample=1#INF
]

       
    # Parameter values for the reader
reader=[
      readerType=Kaldi2Reader
      readMethod=blockRandomize
      frameMode=false
      miniBatchMode=Partial
      randomize=Auto
      verbosity=1

      features=[
	  dim=$featDim$
          scpFile=$inputCounts$
          rx=$inputFeats$
          featureTransform=$featureTransform$
      ]
      labels=[
          mlfFile=$inputLabels$
          labelDim=$labelDim$
          labelMappingFile=$labelMapping$
      ]
]

cvReader=[
      # reader to use
      readerType=Kaldi2Reader
      readMethod=blockRandomize
      frameMode=false
      miniBatchMode=Partial
      randomize=Auto
      verbosity=1
      features=[
          dim=$featDim$
          scpFile=$cvInputCounts$
          rx=$cvInputFeats$
          featureTransform=$featureTransform$
      ]

      labels=[
          mlfFile=$cvInputLabels$
          labelDim=$labelDim$
          labelMappingFile=$labelMapping$
      ]
]


P1=[
    action=train
    hiddenDim=$hiddenDim$
    featDim=$featDim$
    labelDim=$labelDim$
    modelPath=$modelName$.1layer
    useValidation=true

    NDLNetworkBuilder=[
        networkDescription=$initModel$
    ]
]

A2=[    
    action=edit
    hiddenDim=$hiddenDim$
    featDim=$featDim$
    labelDim=$labelDim$
    CurrLayer=1
    NewLayer=2
    CurrModel=$modelName$.1layer
    NewModel=$modelName$.2layer.0
    editPath=$addLayerMel$
]

P2=[
    action=train
    modelPath=$modelName$.2layer
    NDLNetworkBuilder=[
        networkDescription=$initModel$
    ]
]

A3=[
    action=edit
    hiddenDim=$hiddenDim$
    featDim=$featDim$
    labelDim=$labelDim$
    CurrLayer=2
    NewLayer=3
    CurrModel=$modelName$.2layer
    NewModel=$modelName$.3layer.0
    editPath=$addLayerMel$
]

P3=[
    action=train
    modelPath=$modelName$.3layer
    NDLNetworkBuilder=[
        networkDescription=$initModel$
    ]
]

A4=[
    action=edit
    hiddenDim=$hiddenDim$
    featDim=$featDim$
    labelDim=$labelDim$
    CurrLayer=3
    NewLayer=4
    CurrModel=$modelName$.3layer
    NewModel=$modelName$.4layer.0
    editPath=$addLayerMel$
]

P4=[
    action=train
    modelPath=$modelName$.4layer
    NDLNetworkBuilder=[
        networkDescription=$initModel$
    ]
]

A5=[
    action=edit
    hiddenDim=$hiddenDim$
    featDim=$featDim$
    labelDim=$labelDim$
    CurrLayer=4
    NewLayer=5
    CurrModel=$modelName$.4layer
    NewModel=$modelName$.5layer.0
    editPath=$addLayerMel$
]

P5=[
    action=train
    modelPath=$modelName$.5layer
    NDLNetworkBuilder=[
        networkDescription=$initModel$
    ]
]

A6=[
    action=edit
    hiddenDim=$hiddenDim$
    featDim=$featDim$
    labelDim=$labelDim$
    CurrLayer=5
    NewLayer=6
    CurrModel=$modelName$.5layer
    NewModel=$modelName$.6layer.0
    editPath=$addLayerMel$
]

Train=[
    action=train
    modelPath=$modelName$.6layer
    SGD=[
        #epochSize=100000
        epochSize=0
        minibatchSize=200
        #learningRatesPerMB=50:10*2:1*5:0.5*5:0.1
        learningRatesPerSample=0.0005
        momentumPerMB=0.9
        dropoutRate=0.5*5:0.4*5:0.3*5:0.2*5:0.1*5:0.0
        maxEpochs=300
        AutoAdjust=[
            reduceLearnRateIfImproveLessThan=-0.005
            loadBestModel=true
            increaseLearnRateIfImproveMoreThan=1000000000
            learnRateDecreaseFactor=0.5
            autoAdjustLR=AdjustAfterEpoch
            learnRateAdjustInterval=1
        ]
        gradientClippingWithTruncation=true
        clippingThresholdPerSample=1#INF
    ]  
    NDLNetworkBuilder=[
        networkDescription=$initModel$
    ]
]
